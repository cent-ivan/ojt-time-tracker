version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '5000:5000'
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy # Wait for DB to be healthy. from healthcheck
    volumes:
      - .:/flask-app
    restart: unless-stopped # Always try to restart if it crashes or Docker daemon restarts


  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
     - '5432:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck: # Still highly recommended to know when DB is truly ready
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always # Always ensure DB starts

volumes:
  pg_data:


  # frontend:
  #   build:
  #     context: .
  #     dockerfile: tailwind.Dockerfile
  #   command: npm run build
  #   volumes:
  #     - .:/flask-app